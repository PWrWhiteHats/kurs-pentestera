import socket


BIND_ADDR = "127.0.0.1" # adres, na którym będziemy nasłuchiwać
BIND_PORT = 1337        # port, na którym serwer będzie działał

# Tworzenie gniazda do nasłuchiwania na połączenia
# kombinacja AF_INET + SOCK_STREAM oznacza TCP dla IPv4
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Powiązanie gniazda z danym adresem i portem
# przekazanymi jako tuple
server_socket.bind((BIND_ADDR, BIND_PORT))

# Rozpoczęcie nasłuchiwania na połączenia
server_socket.listen(5)

print(f"Nasłuchiwanie połączeń na {BIND_ADDR}:{BIND_PORT}")

while True:
    try:
        # Akceptowanie połączenia od klienta.
        # metoda accept zwraca (nowe) gniazdo do obsługi połączenia z klientem
        # oraz jego adres IP wraz z używanym przez niego portem
        client_socket, remote_addr = server_socket.accept()
        print(f"+ Nowe połączenie od [{remote_addr[0]}:{remote_addr[1]}]")

        # Odebranie do 1024 bajtów od klienta
        data = client_socket.recv(1024)

        # Wypisanie zdekodowanych (bytes -> str) danych
        print(f"Otrzymano: {data.decode()}")

        # Odesłanie danych z powrotem
        client_socket.send(data)

        # Zamknięcie gniazda klienta
        client_socket.close()
        print(f"- Koniec połączenia z [{remote_addr[0]}:{remote_addr[1]}]")
    except KeyboardInterrupt:
        # W przypadku naciśnięcia Ctrl+C
        # UWAGA na Windowsie: jeśli po naciścnięciu Ctrl+C
        # nic się nie stało, uruchom ponownie klient. Wtedy serwer
        # powinien zakończyć działanie
        print("Kończenie")
        break
    except Exception as e:
        # W przypadku wystąpienia błędu
        print(f"ERROR: {e}")
        break

# Zamknięcie gniazda serwera      
server_socket.close()


from scapy.all import IP, Raw, TCP, sniff
import re


def packet_callback(packet):
    if IP not in packet or Raw not in packet:
        return
    payload = packet[Raw].load
    src_ip, dst_ip = packet[IP].src, packet[IP].dst
    src_port, dst_port = packet[TCP].sport, packet[TCP].dport
    sensitive_keywords = ('password', 'username', 'uname',
                          'login', 'email', 'user', 'pass')

    # regex: .*password.*|.*username.*|.*uname.*|.*login.*|.*email.*|.*user.*|.*pass.*
    pattern = "|".join((f".*{keyword}.*" for keyword in sensitive_keywords)).encode()

    matches = re.findall(pattern, payload, flags=re.IGNORECASE)

    if matches:
        print("[!!] Sensitive keyword detected in TCP packet", end=" ")
        print(f"{src_ip}:{src_port} -> {dst_ip}:{dst_port}")
        for matched in matches:
            try:
                matched = matched.decode()
            except:
                pass

            print("\t*", matched)


if __name__ == '__main__':
    sniff(iface='wlan1', filter='tcp', prn=packet_callback, store=0)
